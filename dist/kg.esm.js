const t=new Map;function e(e="kg"){const n=(t.get(e)||0)+1;return t.set(e,n),n}function n(t){return JSON.parse(JSON.stringify(t))}const r={name:"",children:[]};function i(t={},e=[]){const s=n(r);return s.name=`${t.id}: ${t.label}`,s.children=t.children.map((t=>i(e.filter((e=>e.id===t))[0],e))),s}const s=new Map([["sunburst",function(t="",e=[]){const s=e.filter((t=>0===t.parent.length)),a=Array.from(new Set(s.reduce(((t,e)=>[...t,...e.layer]),[]))),c=n(r);return c.name=t,c.children=a.map((t=>{const a=n(r);return a.name=t,a.children=s.filter((e=>e.layer.includes(t))).map((t=>i(t,e))),a})),c}]]);class a{constructor(t="",e=[{}],n="",r=""){return this.id=t,this.data=e,this.done=!1,this.output=null,this.title=n,this.type=r,this}process(){let t;try{this.output=s.get(this.type)(this.title,Array.isArray(this.data)?this.data:[this.data]),this.done=!0,t=!0}catch(e){t=!1}return this.data=null,t}}function c({data:t=[],id:n=`kg${e()}`,title:r="",type:i=""}={}){return new a(n,t,r,i)}export{c as kg};